@using Epam_MVC4.Models
@using System.Globalization
@using PagedList.Mvc
@using PagedList
@using Epam_MVC4.Controllers
@model _TableViewModel

<div class="grid">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>
                    @Html.LabelFor(x => Model.Data.FirstOrDefault().TradeDate)
                </th>
                <th>
                    @Html.LabelFor(x => Model.Data.FirstOrDefault().Open)
                </th>
                <th>
                    @Html.LabelFor(x => Model.Data.FirstOrDefault().Low)
                </th>
                <th>
                    @Html.LabelFor(x => Model.Data.FirstOrDefault().High)
                </th>
                <th>
                    @Html.LabelFor(x => Model.Data.FirstOrDefault().Close)
                </th>
                <th>
                    @Html.LabelFor(x => Model.Data.FirstOrDefault().Volume)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data)
            {
                <tr>
                    <td align="left">
                        @Html.DisplayFor(m => item.TradeDate)
                    </td>
                    <td align="left">
                        @Html.DisplayFor(m => item.Open)
                    </td>
                    <td align="left">
                        @Html.DisplayFor(m => item.Low)
                    </td>
                    <td align="left">
                        @Html.DisplayFor(m => item.High)
                    </td>
                    <td align="left">
                        @Html.DisplayFor(m => item.Close)
                    </td>
                    <td align="left">
                        @Html.DisplayFor(m => item.Volume)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @*@Html.PagedListPager((IPagedList)ViewBag.PagedList, page => Url.Action("Index", new { page }), 
                        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "data-table" }))*@
</div>
<div class="export">
    <div class="btn-group">
        @foreach (ExportFormat item in Model.Formats)
        {
            var name = "";
            name = Enum.GetName(typeof(ExportFormat), item);
            @Html.ActionLink("Export to: " + name, "Export", new { SelectedFormat = @item }, new { @class = "btn btn-default" })

        }
    </div>
</div>
